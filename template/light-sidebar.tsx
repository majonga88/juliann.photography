"use client"

import React, { ReactNode, useState } from 'react'
import { usePathname } from 'next/navigation'
import { motion } from 'framer-motion';
import {
  Box,
  Flex,
  Link,
} from '@chakra-ui/react';

export default function SimpleSidebar({ children }: { children: ReactNode }) {
  return (
    <Box minH="100vh" bg={loadBackgroundColor} color={loadColor}>
      <SidebarContent />
      <Box ml={{ base: 0, md: 130, lg: 230 }}>
        {children}
      </Box>
    </Box>
  );
}
export const loadHoverColor: any = () => {
  const pathname = usePathname();
  if (pathname === '/architecture') {
    return "rgb(183, 94, 9)"
  } else if (pathname === '/wildlife') {
    return "rgb(183, 94, 9)"
  } else if (pathname === '/nature') {
    return "rgb(160, 170, 184)"
  } else if (pathname === '/city-life') {
    return "rgb(160, 170, 184)"
  } else if (pathname === '/lights') {
    return "rgb(255, 255, 255)"
  } else {
    return "rgb(183, 94, 9)"
  }
}

const loadBackgroundColor: any = () => {
  const pathname = usePathname();
  if (pathname === '/architecture') {
    return "rgb(133, 203, 231)"
  } else if (pathname === '/wildlife') {
    return "rgb(144, 189, 223)"
  } else if (pathname === '/nature') {
    return "rgb(246, 192, 142)"
  } else if (pathname === '/city-life') {
    return "rgb(219, 187, 119)"
  } else if (pathname === '/lights') {
    return "rgb(135, 160, 172)"
  } else {
    return "rgb(24, 26, 27)"
  }
};

const loadColor: any = () => {
  const pathname = usePathname();
  if (pathname === '/nature'
    || pathname === '/city-life'
    || pathname === '/lights') {
    return "#000"
  } else {
    return "rgb(255, 255, 255)"
  }
};

const loadColorForLogo = () => {
  const pathname = usePathname();
  let coordinateColor: string = "0, 0, 0";

  if (pathname === '/architecture') {
    coordinateColor = "255, 255, 255"
  } else if (pathname === '/wildlife') {
    coordinateColor = "255, 255, 255"
  } else if (pathname === '/city-life') {
    coordinateColor = "255, 255, 255"
  } else if (pathname === '/lights') {
    coordinateColor = "255, 255, 255"
  } else if (pathname === '/about' || pathname === '/' || pathname === '') {
    coordinateColor = "162, 179, 204"
  }
  return coordinateColor;
}

const loadVariantColorForLogo = () => {
  return {
    hidden: {
      opacity: 0,
      pathLength: 0,
      fill: "rgba(" + loadColorForLogo() + ", 0)"
    },
    visible: {
      opacity: 1,
      pathLength: 1,
      fill: "rgba(" + loadColorForLogo() + ", 1)"
    }
  }
};

const SidebarContent = () => {
  return (
    <Box
      w={{ base: 'full', md: 130, lg: 230 }}
      pos="fixed"
      h="full"
      bg={loadBackgroundColor}>
      <Flex mx="8" mt="8" justifyContent="space-between" h={'17vh'}>
        <Logo />
      </Flex>
    </Box>
  );
};

const Logo = () => {

  const [isHovered, setIsHovered] = useState(false);

  const logoColor = "rgb(" + loadColorForLogo() + ")";
  const logoVariantColor = loadVariantColorForLogo();

  return (
    <Link href='/' style={{ textDecoration: 'none', color: isHovered ? loadHoverColor : "initial" }} _focus={{ boxShadow: 'none' }} onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}>
      <motion.svg
        xmlns="http://www.w3.org/2000/svg"
      >
        <motion.path
          d="M 122.898 23.595 L 122.898 37.84 L 119.708 37.84 L 119.708 24.338 A 12.715 12.715 0 0 0 119.568 22.385 Q 119.413 21.386 119.083 20.595 A 4.86 4.86 0 0 0 117.948 18.906 A 6.02 6.02 0 0 0 114.474 17.306 A 8.217 8.217 0 0 0 113.438 17.243 A 6.418 6.418 0 0 0 110.463 17.986 A 7.879 7.879 0 0 0 109.931 18.287 A 8.247 8.247 0 0 0 107.292 20.924 A 9.636 9.636 0 0 0 107.154 21.148 A 7.71 7.71 0 0 0 106.072 24.937 A 9.196 9.196 0 0 0 106.067 25.217 L 106.068 37.84 L 102.933 37.84 L 102.933 15.263 L 106.068 15.263 L 106.068 19.608 Q 106.26 18.645 107.374 17.476 A 8.764 8.764 0 0 1 108.827 16.261 A 11.673 11.673 0 0 1 110.234 15.455 A 8.519 8.519 0 0 1 113.85 14.604 A 9.874 9.874 0 0 1 114.043 14.603 Q 116.188 14.603 118.223 15.524 A 7.807 7.807 0 0 1 121.388 18.164 A 9.418 9.418 0 0 1 121.578 18.439 A 7.474 7.474 0 0 1 122.578 20.765 Q 122.898 22.038 122.898 23.595 Z M 27.253 15.263 L 27.253 27.06 Q 27.253 30.045 28.245 32.101 A 7.466 7.466 0 0 0 28.999 33.344 Q 30.745 35.668 34.265 35.668 Q 37.813 35.668 39.545 33.344 A 8.116 8.116 0 0 0 40.831 30.66 Q 41.138 29.567 41.234 28.276 A 16.413 16.413 0 0 0 41.278 27.06 L 41.278 15.263 L 44.413 15.263 L 44.413 27.61 A 14.433 14.433 0 0 1 44.098 30.685 A 11.522 11.522 0 0 1 43.23 33.234 A 9.073 9.073 0 0 1 39.793 37.097 Q 37.538 38.5 34.265 38.5 A 12.498 12.498 0 0 1 31.703 38.25 A 9.005 9.005 0 0 1 28.765 37.098 Q 26.51 35.695 25.328 33.234 Q 24.145 30.773 24.145 27.61 L 24.145 15.263 L 27.253 15.263 Z M 17.71 1.54 L 17.71 26.868 A 21.436 21.436 0 0 1 17.525 29.762 Q 17.279 31.565 16.706 33.055 A 9.132 9.132 0 0 1 15.382 35.431 A 7.782 7.782 0 0 1 13.613 37.084 A 7.813 7.813 0 0 1 11.058 38.189 Q 9.784 38.5 8.25 38.5 A 15.496 15.496 0 0 1 6.398 38.396 Q 4.956 38.222 3.864 37.758 A 12.791 12.791 0 0 1 2.712 37.203 Q 2.156 36.898 1.717 36.569 A 5.919 5.919 0 0 1 1.169 36.108 A 14.713 14.713 0 0 1 0.764 35.706 Q 0.204 35.128 0.022 34.777 A 1.243 1.243 0 0 1 0 34.733 L 1.568 32.12 A 5.128 5.128 0 0 0 1.794 32.473 Q 2.044 32.833 2.428 33.288 A 18.564 18.564 0 0 0 2.558 33.44 A 4.508 4.508 0 0 0 3.253 34.084 Q 3.617 34.36 4.074 34.612 A 9.217 9.217 0 0 0 4.579 34.87 A 5.917 5.917 0 0 0 5.839 35.291 Q 6.436 35.423 7.132 35.473 A 12.27 12.27 0 0 0 8.003 35.502 A 8.577 8.577 0 0 0 9.599 35.363 Q 10.523 35.188 11.252 34.793 A 4.592 4.592 0 0 0 11.962 34.32 A 6.16 6.16 0 0 0 13.804 31.786 A 7.712 7.712 0 0 0 14.025 31.158 A 13.75 13.75 0 0 0 14.545 28.521 A 17.215 17.215 0 0 0 14.63 26.785 L 14.63 1.54 L 17.71 1.54 Z M 95.838 37.84 L 92.785 37.84 L 92.785 33.11 Q 92.637 33.681 91.961 34.576 A 13.955 13.955 0 0 1 91.506 35.145 Q 90.506 36.335 88.807 37.303 A 14.681 14.681 0 0 1 88.509 37.469 A 8.425 8.425 0 0 1 85.919 38.343 A 11.388 11.388 0 0 1 83.985 38.5 A 11.464 11.464 0 0 1 78.361 37.084 A 10.629 10.629 0 0 1 74.334 33.153 A 12.571 12.571 0 0 1 74.236 32.986 A 11.275 11.275 0 0 1 72.92 29.325 A 15.37 15.37 0 0 1 72.683 26.565 A 15.1 15.1 0 0 1 72.98 23.495 A 11.151 11.151 0 0 1 74.236 20.144 Q 75.79 17.463 78.361 16.033 Q 80.933 14.603 83.985 14.603 A 11.766 11.766 0 0 1 86.134 14.789 A 8.537 8.537 0 0 1 88.495 15.579 A 12.465 12.465 0 0 1 90.005 16.488 Q 90.88 17.108 91.506 17.82 Q 92.62 19.085 92.758 19.938 L 92.758 15.263 L 95.838 15.263 L 95.838 37.84 Z M 54.973 0 L 54.973 37.84 L 51.783 37.84 L 51.783 0 L 54.973 0 Z M 75.79 26.565 A 11.073 11.073 0 0 0 76.044 28.993 A 8.376 8.376 0 0 0 77.028 31.487 A 8.902 8.902 0 0 0 79.074 33.869 A 8.301 8.301 0 0 0 80.231 34.65 Q 82.198 35.75 84.37 35.75 Q 86.763 35.75 88.633 34.623 A 7.898 7.898 0 0 0 91.45 31.687 A 9.45 9.45 0 0 0 91.589 31.432 A 9.208 9.208 0 0 0 92.496 28.722 A 12.417 12.417 0 0 0 92.675 26.565 A 12.211 12.211 0 0 0 92.452 24.175 A 9.107 9.107 0 0 0 91.589 21.698 A 8.319 8.319 0 0 0 89.725 19.297 A 7.815 7.815 0 0 0 88.633 18.494 A 7.842 7.842 0 0 0 85.033 17.375 A 9.595 9.595 0 0 0 84.37 17.353 Q 82.198 17.353 80.231 18.466 Q 78.265 19.58 77.028 21.643 A 8.542 8.542 0 0 0 75.95 24.612 A 11.459 11.459 0 0 0 75.79 26.565 Z M 66.275 37.84 L 63.168 37.84 L 63.168 15.263 L 66.275 15.263 L 66.275 37.84 Z M 133.345 38.188 A 3.026 3.026 0 0 0 134.723 38.5 A 3.656 3.656 0 0 0 134.763 38.5 A 2.992 2.992 0 0 0 136.923 37.592 A 3.662 3.662 0 0 0 136.951 37.564 A 2.959 2.959 0 0 0 137.83 35.42 A 3.811 3.811 0 0 0 137.83 35.379 A 3.023 3.023 0 0 0 136.923 33.192 Q 136.015 32.285 134.723 32.285 Q 133.43 32.285 132.536 33.193 A 3.068 3.068 0 0 0 131.895 34.134 A 3.213 3.213 0 0 0 131.643 35.42 A 3.553 3.553 0 0 0 131.643 35.44 A 2.985 2.985 0 0 0 132.536 37.593 A 3.062 3.062 0 0 0 133.345 38.188 Z M 63.093 5.425 A 2.302 2.302 0 0 0 64.763 6.105 Q 65.78 6.105 66.509 5.404 A 2.824 2.824 0 0 0 66.554 5.36 A 2.254 2.254 0 0 0 67.238 3.712 A 2.665 2.665 0 0 0 67.234 3.58 A 2.186 2.186 0 0 0 66.894 2.489 A 2.651 2.651 0 0 0 65.986 1.622 Q 65.423 1.293 64.763 1.293 Q 63.8 1.293 63.085 1.994 A 2.394 2.394 0 0 0 62.608 2.643 A 2.38 2.38 0 0 0 62.37 3.712 Q 62.37 4.703 63.071 5.404 A 2.787 2.787 0 0 0 63.093 5.425 Z"
          variants={logoVariantColor}
          initial="1"
          fill={logoColor}
          stroke={logoColor}
          strokeWidth={1}
          whileHover={{ fill: "rgb(183, 94, 9)", stroke: "rgb(183, 94, 9)" }}
        />
      </motion.svg>
    </Link>
  )
}

